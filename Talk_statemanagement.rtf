{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fswiss\fcharset0 Arial-BoldMT;\f2\froman\fcharset0 Times-Bold;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue0;
\red199\green204\blue211;\red221\green221\blue220;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;
\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c82173\c83747\c85895;\cssrgb\c89216\c89215\c88993;\cssrgb\c100000\c100000\c99971\c74902;\cssrgb\c100000\c100000\c99971;\cssrgb\c0\c1\c1;
\cssrgb\c100000\c100000\c99985;\cssrgb\c100000\c100000\c99941;\cssrgb\c0\c0\c0\c84706;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid701\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid8}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 Rodney 1-16 (State)\
Peter 9\
Peter 17-33 (State mgmt + History)\
Beiden om en om: 38-42 \'a0Examples\
Rodney 43 - 51 Redux theory + Actions\
Beiden om en om: 52 Actions\
Peter 53 - 54 \'a0Reducers\
Beiden om en om: 55 -56 \'a0Reducers\
Peter 57 Reducer samenvatting\
Rodney 58 - 59 Selectors\
Beiden om en om: 60 - 61 \'a0Selectors\
Peter 62 - 64  Effects\
Rodney 65\
Peter 66 + 67\
Rodney \'a0Zustand\
Peter 66 SignalStore\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 Comparison om en om\
\'97\
State in Angular\
\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 In Angular, the \cf2 \strokec4 @Input\cf2 \strokec5  and \cf2 \strokec4 @Output\cf2 \strokec5  decorators are used for communication between parent and child components. \
\
@Input Country\
@Output resetCountry via emit Event !\
\pard\pardeftab720\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \'97\'97\
LIFECYCLE HOOKS\
\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Angular uses a mechanism known as \'93
\f1\b change detection\'94 
\f0\b0 to handle updates and keep the application state synchronized with the view.\
\
Angular uses the following lifecycle hooks during UPDATES! \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ngOnChanges:\cf2 \strokec5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Called whenever an @input property of the component changes. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ngOnInit:\cf2 \strokec5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Called once after the component is initialized. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ngDoCheck:\cf2 \strokec5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Called during every change detection cycle.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 ngAfterViewInit:\cf2 \strokec5 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls4\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Called after the component's view and its children's views have been initialized.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
\'97\'97\
\
State Management:\
\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\dn12 \outl0\strokewidth0 \strokec4 In frontend development, state management tools are\'a0special packages / tools designed to handle and keep\'a0track of a web application's data.\cf2 \kerning1\expnd0\expndtw0 \up0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
Examples State:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls5\ilvl0\cf2 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\dn6 \outl0\strokewidth0 \strokec4 what users enter/selects,\
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\dn6 \outl0\strokewidth0 \strokec4  the app's settings,\
\ls5\ilvl0\cf2 \kerning1\expnd0\expndtw0 \up0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\dn6 \outl0\strokewidth0 \strokec4  that a\'a0user is logged in\cf2 \kerning1\expnd0\expndtw0 \up0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\'97\'97\'97\
\
State management Solutions\
\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\dn12 \outl0\strokewidth0 \strokec4 Over the years numerous packages have been created\'a0to\'a0 deal with state for frontend applications.\cf2 \up0 \uc0\u8203 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\
-\
\
Flux architecture made it possible to have state management libs !\
\
\'97\'97\
\
RXJS\
\
\'97\'97\
\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 RxJS stands for Reactive Extensions for JavaScript, and it is a library that provides a powerful set of tools for working with async data streams. \
\
Examples\
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 handling events, \
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 data fetching, \
\ls6\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 and observable data updates.\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec6 \
\'97\'97\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 simple example of state management using RxJS\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Let's create a basic example where we have a counter as our application state. We'll use RxJS Observables and Subjects to handle state changes.\
\
\
\pard\pardeftab720\sa400\partightenfactor0
\cf2 \strokec5 In this simplified example:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 stateSubject\cf2 \strokec5  is a BehaviorSubject that holds the current state.\
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 state$\cf2 \strokec5  is an observable that emits state changes.\
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 increment\cf2 \strokec5  is an action that increments the count in the state and triggers a state change.\
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 We subscribe to \cf2 \strokec5 state$\cf2 \strokec5  to log the state changes.\
\ls7\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 Finally, we trigger the \cf2 \strokec5 increment\cf2 \strokec5  action to update the state.\
\pard\pardeftab720\partightenfactor0
\cf2 \strokec5 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
SIGNALS\
\
\'97\'97\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 Angular Signals are a reactive data management system introduced in Angular 16/17\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 The whole goal of signals is to give developers a new\'a0\cf2 \strokec8 easy-to-use reactive primitive/object\cf2 \strokec7 \'a0that can be used to build applications in reactive style.\
\
Signals are all about enabling very\'a0\cf2 \strokec8 fine-grained updates to the DOM\cf2 \strokec7 \'a0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\
\'97\'97\
\pard\pardeftab720\partightenfactor0
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 simple example of state management using SIGNALS\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
\pard\pardeftab720\sa480\partightenfactor0
\cf2 \strokec6 The given code is an example of an Angular component that uses a signal to track a counter value. \
The component also defines a derivedCounter property that is calculated based on the counter value.\
The \cf2 \strokec6 counter\cf2 \strokec6  signal can be updated using the \cf2 \strokec6 set\cf2 \strokec6  method. In this case, the \cf2 \strokec6 counter\cf2 \strokec6  signal is initialized to the value of 0.\
The \cf2 \strokec6 derivedCounter\cf2 \strokec6  property is a computed property that is calculated based on the \cf2 \strokec6 counter\cf2 \strokec6  signal. The computed property returns the value of the \cf2 \strokec6 counter\cf2 \strokec6  signal multiplied by 10.\
The \cf2 \strokec6 increment\cf2 \strokec6  method is called when the user clicks the button.\
\'97\'97\
REDUCER\
\pard\pardeftab720\partightenfactor0

\f2\b\fs32 \cf9 \cb10 \strokec11 It is a \'93pure function\'94, 
\f3\b0 taking the old state and returning a new state
\f0\fs28 \cf2 \cb3 \strokec6 \
\pard\pardeftab720\sa480\partightenfactor0
\cf2 \strokec6 \
Reducer (
\f1\b WITH CODE REDUCERS
\f0\b0 )\
\pard\pardeftab720\partightenfactor0
\cf2 \dn5 \strokec4 A reducer has a few characteristics that we\'a0have to\'a0keep in mind.\cf2 \up0 \strokec12 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls8\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\cf2 \expnd0\expndtw0\kerning0
\dn5 \outl0\strokewidth0 \strokec4 The\'a0\cf2 \dn5 state is immutable\cf2 \dn5 \'a0and needs a deep copy prior modifying it.\'a0Redux-toolkit uses\'a0\cf2 \dn5 'immer'\'a0\cf2 \dn5 for this.\cf2 \up0  \cf2 \
\ls8\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\cf2 \expnd0\expndtw0\kerning0
\dn5 \outl0\strokewidth0 \strokec4 It\'92s considered best practice to keep logic as small as possible.\cf2 \up0 \uc0\u8203 \u8232 \cf2 \strokec12 \uc0\u8203 \u8232 \'97\'97\
\pard\tx720\pardeftab720\partightenfactor0
\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 signalStoreFeature\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 \
}